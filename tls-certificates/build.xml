<project name="TLS Certificates" default="help" basedir=".">

  <!-- set properties for this build -->
  
  <property file="../resources/common.properties"/>
    
  <property name="rootfile" value="tlsroot"/>
  <property name="root.dir" value="root"/>
  <property name="server.dir" value="server"/>
  <property name="bcprovider.jar" value="bcprov-jdk15on-151.jar"/>
  
  <target name="help">
      <echo message="createroot createcert -Dserver=HostNameOrIpAddress [-Dcn.hostname=HostName]"/>
  </target>
 
  <target name="_createcert">
    <java fork="yes"
          classname="org.webpki.ca.CommandLineCA"
          dir="${target.dir}"
          failonerror="true">
        <classpath>
          <fileset dir="${@webpki.lib.dir}">
             <include name="${@webpki-libext.jar}"/>
          </fileset>
          <fileset dir="${@webpki.lib.dir}">
             <include name="${@webpki-webutil.jar}"/>
          </fileset>
          <fileset dir="${@reference.lib.dir}">
             <include name="${bcprovider.jar}"/>
          </fileset>
          <fileset dir="${@reference.lib.dir}">
             <include name="*.jar"/>
          </fileset>
        </classpath>
        <arg line="${cmd} -out/keyalias mykey"/>
    </java>
  </target>

  <target name="createcert">
    <fail unless="server" message="-&#10;
************************************************************************&#10;
* You must define a hostname or IP-address for the server certificate: *&#10;
* -Dserver=argument                                                    *&#10;
************************************************************************&#10;"/>
    <property name="the.ca.file" location="${root.dir}/${rootfile}.p12"/>
    <condition property="ipaddress">
     <matches pattern="^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$" string="${server}"/>
    </condition>
    <condition property="san.ext" value="-extension/ip">
      <isset property="ipaddress"/>
    </condition>
    <condition property="san.ext" value="-extension/dns">
      <not>
        <isset property="ipaddress"/>
      </not>
    </condition>
    <condition property="cert.file" value="${cn.hostname}-and-${server}" else="${server}">
      <and>
        <isset property="ipaddress"/>
        <isset property="cn.hostname"/>
      </and>
    </condition>
    <condition property="opt.san.host" value="-extension/dns ${cn.hostname}" else="">
      <and>
        <isset property="ipaddress"/>
        <isset property="cn.hostname"/>
      </and>
    </condition>
    <echo message="File: ${cert.file}"/>
    <antcall target="_createcert">
       <param name="target.dir" value="${server.dir}"/>
       <param name="cmd" value="-ca/keypass ${@keypassword} -ca/storetype PKCS12 -ca/storepass ${@keypassword} -ca/keystore ${the.ca.file} -entity/ee -extension/ku digitalSignature -extension/ku keyEncipherment -extension/eku serverAuth ${san.ext} ${server} ${opt.san.host} -subject &quot;CN=TLS certificate for ${cert.file}&quot; -validity/start 2014-01-01T00:00:00 -validity/end 2024-07-10T09:59:59 -out/storetype PKCS12 -out/keystore ${cert.file}.p12 -out/storepass ${@keypassword} -out/keypass ${@keypassword} -keysize 2048 -sigalg RSA_SHA512"/>
    </antcall>
    <java fork="yes"
          classname="org.webpki.tools.KeyStore2PEMConverter"
          dir="${server.dir}"
          failonerror="true">
        <classpath>
          <fileset dir="${@webpki.lib.dir}">
             <include name="${@webpki-libext.jar}"/>
          </fileset>
          <fileset dir="${@webpki.lib.dir}">
             <include name="${@webpki-webutil.jar}"/>
          </fileset>
          <fileset dir="${@reference.lib.dir}">
             <include name="${bcprovider.jar}"/>
          </fileset>
          <fileset dir="${@reference.lib.dir}">
             <include name="*.jar"/>
          </fileset>
        </classpath>
        <arg line="${cert.file}.p12 ${@keypassword} ${cert.file}.cert.pem certpath"/>
    </java>
    <java fork="yes"
          classname="org.webpki.tools.KeyStore2PEMConverter"
          dir="${server.dir}"
          failonerror="true">
        <classpath>
          <fileset dir="${@webpki.lib.dir}">
             <include name="${@webpki-libext.jar}"/>
          </fileset>
          <fileset dir="${@webpki.lib.dir}">
             <include name="${@webpki-webutil.jar}"/>
          </fileset>
          <fileset dir="${@reference.lib.dir}">
             <include name="${bcprovider.jar}"/>
          </fileset>
          <fileset dir="${@reference.lib.dir}">
             <include name="*.jar"/>
          </fileset>
        </classpath>
        <arg line="${cert.file}.p12 ${@keypassword} ${cert.file}.key.pem private"/>
    </java>
  </target>
<!-- 
keystore-file password PEM-file qualifier
qualifier = [public private certpath trust]
 -->  
  <target name="createroot">
    <delete dir="${root.dir}"/>
    <mkdir dir="${root.dir}"/>
    <mkdir dir="${server.dir}"/>
    <antcall target="_createcert">
       <param name="target.dir" value="${root.dir}"/>
       <param name="cmd" value="-selfsigned -entity/ca -subject &quot;CN=WebPKI.org TLS Root CA&quot; -validity/start 2010-07-10T10:00:00 -validity/end 2030-07-10T09:59:59 -out/storetype PKCS12 -out/keystore ${rootfile}.p12 -out/storepass ${@keypassword} -out/keypass ${@keypassword} -keysize 4096 -sigalg RSA_SHA512 -serial 1"/>
    </antcall>
    <exec executable="keytool" failonerror="true" dir="${root.dir}">
      <arg line="-exportcert -keystore ${rootfile}.p12 -alias mykey -storepass ${@keypassword} -storetype PKCS12 -file ${rootfile}.cer"/>
    </exec>
    <java fork="yes"
          classname="org.webpki.tools.KeyStore2PEMConverter"
          dir="${root.dir}"
          failonerror="true">
        <classpath>
          <fileset dir="${@webpki.lib.dir}">
             <include name="${@webpki-libext.jar}"/>
          </fileset>
          <fileset dir="${@webpki.lib.dir}">
             <include name="${@webpki-webutil.jar}"/>
          </fileset>
          <fileset dir="${@reference.lib.dir}">
             <include name="${bcprovider.jar}"/>
          </fileset>
          <fileset dir="${@reference.lib.dir}">
             <include name="*.jar"/>
          </fileset>
        </classpath>
        <arg line="${rootfile}.p12 ${@keypassword} ${rootfile}.pem certpath"/>
    </java>
  </target>

</project>
